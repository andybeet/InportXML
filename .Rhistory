library(InportXML)
devtools::load_all(".")
devtools::document()
# now write out all of the nested stuff. recursive procedure
if (irow == dim(mainTags)[1]) { # last header !
nested <- data[(mainTagIndex[irow]+1):nrow(data),]
} else { # all other headers
nested <- data[(mainTagIndex[irow]+1):(mainTagIndex[irow+1]-1),]
}
library(InportXML)
library(InportXML)
devtools::document()
devtools::document()
library(InportXML)
library(InportXML)
devtools::document()
library(InportXML)
devtools::document()
library(InportXML)
library(InportXML)
devtools::document()
InportXML::createInPortXML(inFile = "Master_Template.xlsx","test.xml")
InportXML::createInPortXML(inFile = "Master_Template.xlsx","test.xml")
library(InportXML)
InportXML::createInPortXML(inFile = "Master_Template.xlsx","test.xml")
library(InportXML)
library(InportXML)
devtools::document()
devtools::document()
library(InportXML)
InportXML::createInPortXML(inFile = "Master_Template.xlsx","test.xml")
devtools::document()
library(InportXML)
InportXML::createInPortXML(inFile = "Master_Template.xlsx","test.xml")
library(InportXML)
InportXML::createInPortXML(inFile = "Master_Template.xlsx","test.xml")
createInPortXML <- function(inFile,outFile) {
masterXML_filename <- paste0("master_",outFile)
entityXML_filename <- paste0("entity_",outFile)
createItemXML(file.path("data",inFile),outFile=masterXML_filename)
createEntityXML(file.path("data",inFile),outFile=entityXML_filename)
}
inFile <- "Master_Template.xlsx"
outFile <- "test.xml"
createItemXML(file.path("data",inFile),outFile=masterXML_filename)
masterXML_filename <- paste0("master_",outFile)
entityXML_filename <- paste0("entity_",outFile)
createItemXML(file.path("data",inFile),outFile=masterXML_filename)
if (file.exists(outFile)) file.remove(outFile)
# read in data file
data <- readxl::read_excel(inFile, sheet = "Data_Set", skip = 1)
inFile <- file.path("data",inFile)
# read in data file
data <- readxl::read_excel(inFile, sheet = "Data_Set", skip = 1)
library(InportXML)
createInPortXML <- function(inFile,outFile) {
masterXML_filename <- paste0("master_",outFile)
entityXML_filename <- paste0("entity_",outFile)
createItemXML(file.path("data",inFile),outFile=masterXML_filename)
createEntityXML(file.path("data",inFile),outFile=entityXML_filename)
}
create_Inport_XML(inFile = "Master_Template.xlsx", outFile = "X_metadata_V1.xml")
createInportXML(inFile = "Master_Template.xlsx", outFile = "X_metadata_V1.xml")
createInPortXML(inFile = "Master_Template.xlsx", outFile = "X_metadata_V1.xml")
inFile <- "Master_Template.xlsx"
outFile <- "test.xml"
masterXML_filename <- paste0("master_",outFile)
entityXML_filename <- paste0("entity_",outFile)
createItemXML(file.path("data",inFile),outFile=masterXML_filename)
createItemXML(inFile,outFile=masterXML_filename)
if (file.exists(outFile)) file.remove(outFile)
inFile <- file.path("data",inFile)
# read in data file
data <- readxl::read_excel(inFile, sheet = "Data_Set", skip = 1)
data <- data[,1:3] # # keep first 3 fields only (level, tag, value)
data[is.na(data$value),]$value <- ""
data$value <- as.factor(data$value)
data$value <- as.character(data$value)
# read in attributes file. created in readXML
attributes <- read.csv("XMLattributes.csv",header=TRUE)
# read in attributes file. created in readXML
attributes <- read.csv("XMLattributes.csv",header=TRUE)
file.path("data","XMLattributes.csv")
# read in attributes file. created in readXML
attributes <- read.csv("data/XMLattributes.csv",header=TRUE)
nRows <- dim(data)[1]
nCols <- dim(data)[2]
# write standard header of xml file.
writeHeader(outFile)
# now construct xml file given inputs in data file
# find the main tags and their indices
mainTagIndex <- which(data[,1]==1)
mainTags <- data[mainTagIndex,]
# write standard header of xml file.
InportXML:::writeHeader(outFile)
if (file.exists(outFile)) file.remove(outFile)
inFile <- file.path("data",inFile)
# read in data file
data <- readxl::read_excel(inFile, sheet = "Data_Set", skip = 1)
data <- data[,1:3] # # keep first 3 fields only (level, tag, value)
data[is.na(data$value),]$value <- ""
library(InportXML)
library(InportXML)
# createInPortXML(inFile = "Master_Template.xlsx", outFile = "X_metadata_V1.xml")
#
inFile <- "Master_Template.xlsx"
outFile <- "test.xml"
masterXML_filename <- paste0("master_",outFile)
entityXML_filename <- paste0("entity_",outFile)
createItemXML(inFile,outFile=masterXML_filename)
# write standard header of xml file.
InportXML:::writeHeader(outFile)
library(InportXML)
devtools::document()
createInPortXML(inFile = "Master_Template.xlsx", outFile = "X_metadata_V1.xml")
library(InportXML)
rm(list = ls())
library(InportXML)
createInPortXML(inFile = "Master_Template.xlsx", outFile = "X_metadata_V1.xml")
createItemXML(inFile = "Master_Template.xml", outFile = "DataSet1.xml")
createItemXML(inFile = "Master_Template.xlsx", outFile = "DataSet1.xml")
library(InportXML)
createEntityXML(inFile = "Master_Template.xlsx", outFile = "Data_Entity1.xml")
library(InportXML)
devtools::document()
rm(list = ls())
createInPortXML(inFile = "Master_Template.xlsx", outFile = "~/X_metadata_V1.xml"
createInPortXML(inFile = "Master_Template.xlsx", outFile = "~/X_metadata_V1.xml")
library(InportXML)
setwd("~")
createInPortXML(inFile = "Master_Template.xlsx", outFile = "X_metadata_V1.xml")
library(InportXML)
setwd("~/git/InportXMl")
attributes <- read.csv("data/XMLattributes.csv",header=TRUE)
devtools::use_data(attributes, InportXML, internal = TRUE)
devtools::use_data(attributes, InportXML2, internal = TRUE)
devtools::use_data(attributes, InportXML, internal = TRUE)
?devtools::use_data
devtools::use_data(attributes, internal = TRUE)
# read in attributes file. created in readXML
attributes <- InportXML::XMLattributes
library(InportXML)
# read in attributes file. created in readXML
InportXML::XMLattributes
library(InportXML)
library(InportXML)
devtools::document()
library(InportXML)
library(InportXML)
createInPortXML(inFile = "~/Master_Template.xlsx",outFile = "test.xml")
library(InportXML)
createInPortXML(inFile = "~/Master_Template.xlsx",outFile = "test.xml")
InportXML:::XMLattributes
# read in attributes file. created in readXML
attributes <- InportXML:::attributes
library(InportXML)
createInPortXML(inFile = "~/Master_Template.xlsx",outFile = "test.xml")
library(InportXML)
